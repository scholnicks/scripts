#!/usr/bin/env bash
# vi: set syntax=sh ts=4 sw=4 sts=4 et ff=unix ai si :
#
# convert-audio-files - takes in various music file types and converts
#                       them to MP3 with tags and artwork
#
# (c) Steven Scholnick <scholnicks@gmail.com>
# The convert-audio-files source code is published under a MIT license.

tagOnly="false"
if [[ "$1" = "--tag" ]]; then
    tagOnly="true"
    shift
fi

[[ "$#" -ne 4 ]] && echo "Usage: convert-audio-files setlist artist album artwork" && exit 1

# Initial cleanup
rm -f *.md5 *.ffp *.jpg *.JPG *.txt

# Create .wav files
echo "Creating WAV files"

# opus
for i in *.opus; do ffmpeg -loglevel 0 -nostats -i "$i" "${i%.*}.wav"; done
rm -f *.opus

# shorten
for i in *.shn; do ffmpeg -loglevel 0 -nostats -i "$i" "${i%.*}.wav"; done
rm -f *.shn

# flac
flac --silent --delete-input-file -d *.flac 1>/dev/null 2>&1

# aiff
chname --quiet -s '.aif/.aiff' *.aif
for i in *.aiff; do sox --no-show-progress "$i" "${i%.*}.wav" 1>/dev/null 2>&1; done
rm -f *.aiff

# mp3
if [[ "$tagOnly" == "false" ]]; then
    for i in *.mp3; do sox --no-show-progress "$i" "${i%.*}.wav" 1>/dev/null 2>&1; done
    rm -f *.mp3
fi

if [[ "$tagOnly" == "false" ]]; then
    # Give the full filenames with number prefixes
    chname --titles=$1 *.wav || exit -1
fi

if [[ "$tagOnly" == "false" ]]; then
    # Create the final mp3 files from the .wav files
    if compgen -G "*.wav" > /dev/null; then
        for i in *.wav
        do
            echo "Converting $i"
            lame --nohist --silent "$i" "${i%.*}.mp3"
        done
        rm -f *.wav
    fi
fi

echo
echo "Adding mp3 tags and artwork"

# convert webp to jpg
if [[ "${4: -5}" == ".webp" ]]; then
    jpgFile=${4%.webp}.jpg
    gm convert $4 ${jpgFile}
    artwork=$jpgFile
else
    artwork="$4"
fi

# Optimize the jpg
optimized_artwork="$(mktemp).jpg"
jpegtran -copy none -optimize -outfile $optimized_artwork "$artwork" || exit -1

# Add the MP3 tags
total=$(/bin/ls -1q *.mp3 | wc -l)
counter=1
for f in *.mp3
do
    song=$(echo $f | cut -b6-)
    eyed3 --quiet --title "${song%%.*}" --album "$3" --artist "$2" --album-artist "$2" --disc-num 0 --track $counter \
          --add-image "$optimized_artwork:FRONT_COVER:Album Artwork" --track-total $total "$f" 1>/dev/null
    counter=$[$counter +1]
done

# Print out durations
echo
echo "Durations"
for s in *.mp3
do
    echo -n $(ffmpeg -i "$s" -f null 2>&1 | grep Duration | cut -d, -f1 | cut -f1 | cut -b13-) "- $s"
    echo
done
echo

exit 0

